// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`authorx -> authorx | %identifier arguments parses a single argument 1`] = `
Object {
  "children": Array [
    Object {
      "argList": Array [
        Object {
          "col": 4,
          "line": 2,
          "lineBreaks": 0,
          "offset": 8,
          "text": "google.com",
          "toString": [Function],
          "type": "argument",
          "value": "google.com",
        },
      ],
      "children": Array [
        Object {
          "col": 18,
          "line": 2,
          "lineBreaks": 0,
          "offset": 22,
          "text": "Google ",
          "toString": [Function],
          "type": "text",
          "value": "Google ",
        },
      ],
      "identifier": Object {
        "col": 2,
        "line": 2,
        "lineBreaks": 0,
        "offset": 6,
        "text": "a",
        "toString": [Function],
        "type": "identifier",
        "value": "a",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 26,
          "line": 2,
          "lineBreaks": 1,
          "offset": 30,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier arguments parses multiple arguments 1`] = `
Object {
  "children": Array [
    Object {
      "argList": Array [
        Object {
          "col": 7,
          "line": 2,
          "lineBreaks": 0,
          "offset": 11,
          "text": "r",
          "toString": [Function],
          "type": "argument",
          "value": "r",
        },
        Object {
          "col": 10,
          "line": 2,
          "lineBreaks": 0,
          "offset": 14,
          "text": "exec",
          "toString": [Function],
          "type": "argument",
          "value": "exec",
        },
      ],
      "children": Array [
        Object {
          "col": 1,
          "line": 3,
          "lineBreaks": 1,
          "offset": 22,
          "text": "\\"hello\\"
",
          "toString": [Function],
          "type": "text",
          "value": "\\"hello\\"
",
        },
      ],
      "identifier": Object {
        "col": 2,
        "line": 2,
        "lineBreaks": 0,
        "offset": 6,
        "text": "code",
        "toString": [Function],
        "type": "identifier",
        "value": "code",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 2,
          "line": 4,
          "lineBreaks": 1,
          "offset": 31,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier escaping parses a paragraph with an escape character 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 1,
      "offset": 5,
      "text": "\\\\
",
      "toString": [Function],
      "type": "text",
      "value": "\\\\
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier escaping parses a paragraph with escaped function invocations 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 1,
      "offset": 5,
      "text": "1 \\\\< 2
",
      "toString": [Function],
      "type": "text",
      "value": "1 \\\\< 2
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier escaping parses a paragraph with escaped function invocations followed by a real function invocation 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 0,
      "offset": 5,
      "text": "1 \\\\< 2 ",
      "toString": [Function],
      "type": "text",
      "value": "1 \\\\< 2 ",
    },
    Object {
      "children": Array [
        Object {
          "col": 13,
          "line": 2,
          "lineBreaks": 0,
          "offset": 17,
          "text": "3 ",
          "toString": [Function],
          "type": "text",
          "value": "3 ",
        },
      ],
      "identifier": Object {
        "col": 9,
        "line": 2,
        "lineBreaks": 0,
        "offset": 13,
        "text": "b",
        "toString": [Function],
        "type": "identifier",
        "value": "b",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 16,
          "line": 2,
          "lineBreaks": 1,
          "offset": 20,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier escaping parses a paragraph with escaped function invocations followed by text 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 1,
      "offset": 5,
      "text": "1 \\\\< 2 hello
",
      "toString": [Function],
      "type": "text",
      "value": "1 \\\\< 2 hello
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier escaping parses an escaped function invocation within a function 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 3,
      "offset": 5,
      "text": "\\\\<p {
hello
\\\\}
",
      "toString": [Function],
      "type": "text",
      "value": "\\\\<p {
hello
\\\\}
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": ">",
    "toString": [Function],
    "type": "identifier",
    "value": ">",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier leaves parses a simple authorx code block without escapes 1`] = `
Object {
  "children": Array [
    Object {
      "col": 4,
      "line": 1,
      "lineBreaks": 0,
      "offset": 3,
      "text": "{:
<p {
hello
}
:}",
      "toString": [Function],
      "type": "text",
      "value": "
<p {
hello
}
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": ">",
    "toString": [Function],
    "type": "identifier",
    "value": ">",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier leaves parses html code block without escapes 1`] = `
Object {
  "children": Array [
    Object {
      "col": 4,
      "line": 1,
      "lineBreaks": 0,
      "offset": 3,
      "text": "{:
<pre>
<code>
</code>
</pre>
:}",
      "toString": [Function],
      "type": "text",
      "value": "
<pre>
<code>
</code>
</pre>
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": ">",
    "toString": [Function],
    "type": "identifier",
    "value": ">",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier leaves parses javascript code block without escapes 1`] = `
Object {
  "children": Array [
    Object {
      "col": 4,
      "line": 1,
      "lineBreaks": 0,
      "offset": 3,
      "text": "{:
// my-markdown.js
const xFauxMarkdown = require(\\"@authorx/x-faux-markdown\\")
module.exports = {
// Your custom functions here
...xFauxMarkdown  
}
:}",
      "toString": [Function],
      "type": "text",
      "value": "
// my-markdown.js
const xFauxMarkdown = require(\\"@authorx/x-faux-markdown\\")
module.exports = {
// Your custom functions here
...xFauxMarkdown  
}
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": ">",
    "toString": [Function],
    "type": "identifier",
    "value": ">",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses { hello } | b world 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "col": 11,
          "line": 1,
          "lineBreaks": 0,
          "offset": 10,
          "text": "hello ",
          "toString": [Function],
          "type": "text",
          "value": "hello ",
        },
      ],
      "identifier": Object {
        "col": 7,
        "line": 1,
        "lineBreaks": 0,
        "offset": 6,
        "text": "b",
        "toString": [Function],
        "type": "identifier",
        "value": "b",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 18,
          "line": 1,
          "lineBreaks": 0,
          "offset": 17,
          "text": " ",
          "toString": [Function],
          "type": "ws",
          "value": " ",
        },
      ],
      "type": "whitespace",
    },
    Object {
      "col": 19,
      "line": 1,
      "lineBreaks": 0,
      "offset": 18,
      "text": "world ",
      "toString": [Function],
      "type": "text",
      "value": "world ",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses { hello world } | b 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "col": 11,
          "line": 1,
          "lineBreaks": 0,
          "offset": 10,
          "text": "hello world ",
          "toString": [Function],
          "type": "text",
          "value": "hello world ",
        },
      ],
      "identifier": Object {
        "col": 7,
        "line": 1,
        "lineBreaks": 0,
        "offset": 6,
        "text": "b",
        "toString": [Function],
        "type": "identifier",
        "value": "b",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 24,
          "line": 1,
          "lineBreaks": 0,
          "offset": 23,
          "text": " ",
          "toString": [Function],
          "type": "ws",
          "value": " ",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses a paragraph 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 2,
      "offset": 5,
      "text": "hello world
this is authorx
",
      "toString": [Function],
      "type": "text",
      "value": "hello world
this is authorx
",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses hello { world } | b 1`] = `
Object {
  "children": Array [
    Object {
      "col": 6,
      "line": 1,
      "lineBreaks": 0,
      "offset": 5,
      "text": "hello ",
      "toString": [Function],
      "type": "text",
      "value": "hello ",
    },
    Object {
      "children": Array [
        Object {
          "col": 17,
          "line": 1,
          "lineBreaks": 0,
          "offset": 16,
          "text": "world ",
          "toString": [Function],
          "type": "text",
          "value": "world ",
        },
      ],
      "identifier": Object {
        "col": 13,
        "line": 1,
        "lineBreaks": 0,
        "offset": 12,
        "text": "b",
        "toString": [Function],
        "type": "identifier",
        "value": "b",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 24,
          "line": 1,
          "lineBreaks": 0,
          "offset": 23,
          "text": " ",
          "toString": [Function],
          "type": "ws",
          "value": " ",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses hello 1`] = `
Object {
  "children": Array [
    Object {
      "col": 6,
      "line": 1,
      "lineBreaks": 0,
      "offset": 5,
      "text": "hello ",
      "toString": [Function],
      "type": "text",
      "value": "hello ",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses hello world 1`] = `
Object {
  "children": Array [
    Object {
      "col": 6,
      "line": 1,
      "lineBreaks": 0,
      "offset": 5,
      "text": "hello world ",
      "toString": [Function],
      "type": "text",
      "value": "hello world ",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier parses multiline hello world 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 0,
      "offset": 5,
      "text": "hello ",
      "toString": [Function],
      "type": "text",
      "value": "hello ",
    },
    Object {
      "children": Array [
        Object {
          "col": 12,
          "line": 2,
          "lineBreaks": 0,
          "offset": 16,
          "text": "world ",
          "toString": [Function],
          "type": "text",
          "value": "world ",
        },
      ],
      "identifier": Object {
        "col": 8,
        "line": 2,
        "lineBreaks": 0,
        "offset": 12,
        "text": "b",
        "toString": [Function],
        "type": "identifier",
        "value": "b",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 19,
          "line": 2,
          "lineBreaks": 1,
          "offset": 23,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier single line function invocations parses a single followed by a bracketed invocation 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "col": 4,
          "line": 2,
          "lineBreaks": 0,
          "offset": 8,
          "text": "Hello",
          "toString": [Function],
          "type": "text",
          "value": "Hello",
        },
        Object {
          "children": Array [
            Object {
              "col": 9,
              "line": 2,
              "lineBreaks": 1,
              "offset": 13,
              "text": "
",
              "toString": [Function],
              "type": "ws",
              "value": "
",
            },
          ],
          "type": "whitespace",
        },
      ],
      "identifier": Object {
        "col": 2,
        "line": 2,
        "lineBreaks": 0,
        "offset": 6,
        "text": "#",
        "toString": [Function],
        "type": "identifier",
        "value": "#",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 6,
          "line": 3,
          "lineBreaks": 0,
          "offset": 19,
          "text": "world ",
          "toString": [Function],
          "type": "text",
          "value": "world ",
        },
      ],
      "identifier": Object {
        "col": 2,
        "line": 3,
        "lineBreaks": 0,
        "offset": 15,
        "text": "#",
        "toString": [Function],
        "type": "identifier",
        "value": "#",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 13,
          "line": 3,
          "lineBreaks": 1,
          "offset": 26,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier single line function invocations parses a single line with one word 1`] = `
Object {
  "children": Array [
    Object {
      "col": 4,
      "line": 1,
      "lineBreaks": 0,
      "offset": 3,
      "text": "Hello",
      "toString": [Function],
      "type": "text",
      "value": "Hello",
    },
    Object {
      "children": Array [
        Object {
          "col": 9,
          "line": 1,
          "lineBreaks": 1,
          "offset": 8,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "#",
    "toString": [Function],
    "type": "identifier",
    "value": "#",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier single line function invocations parses a single line with two words 1`] = `
Object {
  "children": Array [
    Object {
      "col": 4,
      "line": 1,
      "lineBreaks": 0,
      "offset": 3,
      "text": "Hello world",
      "toString": [Function],
      "type": "text",
      "value": "Hello world",
    },
    Object {
      "children": Array [
        Object {
          "col": 15,
          "line": 1,
          "lineBreaks": 1,
          "offset": 14,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "#",
    "toString": [Function],
    "type": "identifier",
    "value": "#",
  },
  "type": "functionInvocation",
}
`;

exports[`authorx -> authorx | %identifier single line function invocations parses a single line within another invocation 1`] = `
Object {
  "children": Array [
    Object {
      "col": 1,
      "line": 2,
      "lineBreaks": 2,
      "offset": 5,
      "text": "something

",
      "toString": [Function],
      "type": "text",
      "value": "something

",
    },
    Object {
      "children": Array [
        Object {
          "col": 4,
          "line": 4,
          "lineBreaks": 0,
          "offset": 19,
          "text": "Hello",
          "toString": [Function],
          "type": "text",
          "value": "Hello",
        },
        Object {
          "children": Array [
            Object {
              "col": 9,
              "line": 4,
              "lineBreaks": 1,
              "offset": 24,
              "text": "
",
              "toString": [Function],
              "type": "ws",
              "value": "
",
            },
          ],
          "type": "whitespace",
        },
      ],
      "identifier": Object {
        "col": 2,
        "line": 4,
        "lineBreaks": 0,
        "offset": 17,
        "text": "#",
        "toString": [Function],
        "type": "identifier",
        "value": "#",
      },
      "type": "functionInvocation",
    },
    Object {
      "children": Array [
        Object {
          "col": 1,
          "line": 5,
          "lineBreaks": 1,
          "offset": 25,
          "text": "
",
          "toString": [Function],
          "type": "ws",
          "value": "
",
        },
      ],
      "type": "whitespace",
    },
  ],
  "identifier": Object {
    "col": 2,
    "line": 1,
    "lineBreaks": 0,
    "offset": 1,
    "text": "p",
    "toString": [Function],
    "type": "identifier",
    "value": "p",
  },
  "type": "functionInvocation",
}
`;
